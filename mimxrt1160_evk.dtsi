/*
 * Copyright (c) 2021, NXP
 *
 * SPDX-License-Identifier: Apache-2.0
 */

 #include "mimxrt1160_evk-pinctrl.dtsi"
 #include <nxp/nxp_rt1160.dtsi>
 #include <zephyr/dt-bindings/input/input-event-codes.h>
 
 / {
	 aliases {
		 led0 = &green_led;
		 sw0 = &user_button;
		 magn0 = &fxos8700;
		 accel0 = &fxos8700;
		 sdhc0 = &usdhc1;
		 mcuboot-button0 = &user_button;
	 };
 
	 leds {
		 compatible = "gpio-leds";
		 green_led: led-1 {
			 gpios = <&gpio9 3 GPIO_ACTIVE_LOW>;
			 label = "User LED D6";
		 };
	 };
 
	 gpio_keys {
		 compatible = "gpio-keys";
		 user_button: button-1 {
			 label = "User SW7";
			 gpios = <&gpio13 0 GPIO_ACTIVE_HIGH>;
			 zephyr,code = <INPUT_KEY_0>;
		 };
	 };
 
	 pwmleds {
		 compatible = "pwm-leds";
 
		 green_pwm_led: green_pwm_led {
			 pwms = <&flexpwm1_pwm2 0 PWM_MSEC(20) PWM_POLARITY_NORMAL>;
		 };
	 };
 
	 arduino_header: connector {
		 compatible = "arduino-header-r3";
		 #gpio-cells = <2>;
		 gpio-map-mask = <0xffffffff 0xffffffc0>;
		 gpio-map-pass-thru = <0 0x3f>;
		 gpio-map = <0 0 &gpio9 9 0>,	/* A0 iomuxc_gpio_ad_10*/
				<1 0 &gpio9 10 0>,	/* A1 iomuxc_gpio_ad_11*/
				<2 0 &gpio9 11 0>,	/* A2 iomuxc_gpio_ad_12*/
				<3 0 &gpio9 12 0>,	/* A3 iomuxc_gpio_ad_13*/
				<4 0 &gpio9 8 0>,	/* A4 iomuxc_gpio_ad_09*/
				<5 0 &gpio9 7 0>,	/* A5 iomuxc_gpio_ad_08*/
				<6 0 &gpio11 12 0>,	/* D0 iomuxc_gpio_disp_b2_11_lpuart2_rx UART_TX */
				<7 0 &gpio11 11 0>,	/* D1 iomuxc_gpio_disp_b2_10_lpuart2_tx UART_RX */
				<8 0 &gpio11 13 0>,	/* D2 iomuxc_gpio_disp_b2_12 */
				<9 0 &gpio9 3 0>,	/* D3 iomuxc_gpio_ad_04*/
				<10 0 &gpio9 5 0>,	/* D4 iomuxc_gpio_ad_06*/
				<11 0 &gpio9 4 0>,	/* D5 iomuxc_gpio_ad_05*/
				<12 0 &gpio8 31 0>,	/* D6 iomuxc_gpio_ad_00*/
				<13 0 &gpio9 13 0>,	/* D7 iomuxc_gpio_ad_14*/
				<14 0 &gpio9 6 0>,	/* D8 iomuxc_gpio_ad_07*/
				<15 0 &gpio9 0 0>,	/* D9 iomuxc_gpio_ad_01*/
				<16 0 &gpio9 28 0>,	/* D10 iomuxc_gpio_ad_29_lpspi1_pcs0 SPI_SS */
				<17 0 &gpio9 29 0>,	/* D11 iomuxc_gpio_ad_30_lpspi1_sdo SPI_MOSI */
				<18 0 &gpio9 30 0>,	/* D12 iomuxc_gpio_ad_31_lpspi1_sdi SPI_MISO */
				<19 0 &gpio9 27 0>,	/* D13 iomuxc_gpio_ad_28_lpspi1_sck SPI_CLK */
				<20 0 &gpio12 4 0>,	/* D14 iomuxc_lpsr_gpio_lpsr_04_lpi2c5_sda I2C_SCL */
				<21 0 &gpio12 5 0>;	/* D15 iomuxc_lpsr_gpio_lpsr_05_lpi2c5_scl I2C_SDA */
	 };
 };
 
 &lpuart1 {
	 status = "okay";
	 current-speed = <115200>;
	 pinctrl-0 = <&pinmux_lpuart1>;
	 pinctrl-1 = <&pinmux_lpuart1_sleep>;
	 pinctrl-names = "default", "sleep";
 };
 
 arduino_serial: &lpuart2 {
	 status = "okay";
	 current-speed = <115200>;
	 pinctrl-0 = <&pinmux_lpuart2>;
	 pinctrl-1 = <&pinmux_lpuart2_sleep>;
	 pinctrl-names = "default", "sleep";
 };
 
 arduino_spi: &lpspi1 {
	 status = "okay";
	 pinctrl-0 = <&pinmux_lpspi1>;
	 pinctrl-names = "default";
 };
 
 &user_button {
	 status = "okay";
 };
 
 &green_led {
	 status = "okay";
 };
 
 &lpi2c1 {
	 status = "okay";
	 pinctrl-0 = <&pinmux_lpi2c1>;
	 pinctrl-names = "default";
 };
 
 arduino_i2c: &lpi2c5 {
	 status = "okay";
	 pinctrl-0 = <&pinmux_lpi2c5>;
	 pinctrl-names = "default";
 
	 fxos8700: fxos8700@1f {
		 compatible = "nxp,fxos8700";
		 reg = <0x1f>;
 
		 /* Two zero ohm resistors (R256 and R270) isolate sensor
		  * interrupt gpios from the soc and are unpopulated by default.
		  * Note that if you populate them, they conflict with camera and
		  * ethernet PHY reset signals.
		  */
		 int1-gpios = <&gpio11 14 GPIO_ACTIVE_LOW>;
		 int2-gpios = <&gpio11 15 GPIO_ACTIVE_LOW>;
	 };
 };
 
 &flexspi {
	 status = "okay";
	 ahb-prefetch;
	 ahb-read-addr-opt;
	 rx-clock-source = <1>;
	 reg = <0x400cc000 0x4000>, <0x30000000 DT_SIZE_M(16)>;
	 is25wp128: is25wp128@0 {
		 compatible = "nxp,imx-flexspi-nor";
		 size = <DT_SIZE_M(16*8)>;
		 reg = <0>;
		 spi-max-frequency = <104000000>;
		 status = "okay";
		 jedec-id = [9d 70 17];
		 erase-block-size = <4096>;
		 write-block-size = <1>;
 
		 partitions {
			 compatible = "fixed-partitions";
			 #address-cells = <1>;
			 #size-cells = <1>;
			 boot_partition: partition@0 {
				 label = "mcuboot";
				 reg = <0x00000000 DT_SIZE_K(128)>;
			 };
			 /* The MCUBoot swap-move algorithm uses the last 3 sectors
			  * of the primary slot0 for swap status and move.
			  */
			 slot0_partition: partition@20000 {
				 label = "image-0";
				 reg = <0x00020000 (DT_SIZE_M(7) + DT_SIZE_K(12))>;
			 };
			 slot1_partition: partition@723000 {
				 label = "image-1";
				 reg = <0x00723000 DT_SIZE_M(7)>;
			 };
			 storage_partition: partition@E23000 {
				 label = "storage";
				 reg = <0x00E23000 (DT_SIZE_M(2) - DT_SIZE_K(140))>;
			 };
		 };
	 };
 };
 
 &flexpwm1_pwm2 {
	 status = "okay";
	 pinctrl-0 = <&pinmux_flexpwm1>;
	 pinctrl-names = "default";
 };
 
 &enet_mac {
	 status = "okay";
	 pinctrl-0 = <&pinmux_enet>;
	 pinctrl-names = "default";
	 phy-handle = <&phy>;
	 phy-connection-type = "rmii";
	 zephyr,random-mac-address;
 };
 
 &enet_mdio {
	 status = "okay";
	 pinctrl-0 = <&pinmux_enet_mdio>;
	 pinctrl-names = "default";
	 phy: phy@0 {
		 compatible = "microchip,ksz8081";
		 reg = <0>;
		 status = "okay";
		 reset-gpios = <&gpio12 12 GPIO_ACTIVE_HIGH>;
		 int-gpios = <&gpio9 11 GPIO_ACTIVE_HIGH>;
		 microchip,interface-type = "rmii";
	 };
 };
 
 &enet_ptp_clock {
	 status = "okay";
	 pinctrl-0 = <&pinmux_ptp>;
	 pinctrl-names = "default";
 };
 
 &csi {
	 pinctrl-0 = <&pinmux_csi>;
	 pinctrl-names = "default";
 };
 
 &flexcan3 {
	 pinctrl-0 = <&pinmux_flexcan3>;
	 pinctrl-names = "default";
 };
 
 &lcdif {
	 pinctrl-0 = <&pinmux_lcdif>;
	 pinctrl-names = "default";
 };
 
 &lpi2c1 {
	 pinctrl-0 = <&pinmux_lpi2c1>;
	 pinctrl-names = "default";
 };
 
 &sai1 {
	 pinctrl-0 = <&pinmux_sai1>;
	 pinctrl-names = "default";
 };
 
 &lpadc0 {
	 pinctrl-0 = <&pinmux_lpadc0>;
	 pinctrl-names = "default";
 };
 
 &lpadc0 {
	 status = "okay";
	 pinctrl-0 = <&pinmux_lpadc0>;
	 pinctrl-names = "default";
 };
 
 &flexspi {
	 pinctrl-0 = <&pinmux_flexspi1>;
	 pinctrl-names = "default";
 };
 
 &usdhc1 {
	 pinctrl-0 = <&pinmux_usdhc1>;
	 pinctrl-1 = <&pinmux_usdhc1_dat3_nopull>;
	 pinctrl-names = "default", "nopull";
 };
 